<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FBY展菲个人博客</title>
  
  <subtitle>『公众号：网罗开发』</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://isfanbaoying.com/"/>
  <updated>2018-01-23T08:15:21.000Z</updated>
  <id>http://isfanbaoying.com/</id>
  
  <author>
    <name>FBY展菲</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>快速高效 | iOS银行卡识别</title>
    <link href="http://isfanbaoying.com/%E5%BF%AB%E9%80%9F%E9%AB%98%E6%95%88-iOS%E9%93%B6%E8%A1%8C%E5%8D%A1%E8%AF%86%E5%88%AB/"/>
    <id>http://isfanbaoying.com/快速高效-iOS银行卡识别/</id>
    <published>2018-01-23T07:26:01.000Z</published>
    <updated>2018-01-23T08:15:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一：简介"><a href="#一：简介" class="headerlink" title="一：简介"></a>一：简介</h2><p>快捷支付涉及到方方面面，同时安全问题既是用户所关心的，也是制作者不容忽视的重要部分。<br>比如涉及到支付和金钱的app，商户端app等等，都需要进行实名认证，实名认证可以通过银行卡认证和身份证认证。<br>今天我就和大家介绍一下银行卡识别功能，这个方法是通过图像识别，可以快速、高效的识别银行卡信息。</p><a id="more"></a><h2 id="二：原理"><a href="#二：原理" class="headerlink" title="二：原理"></a>二：原理</h2><p>经实践发现，只要银行卡处于摄像头预览图层中并且银行卡号与识别线重合，即不用完全对准银行卡也可以读取到银行卡号。</p><p>与身份证识别不同的是，银行卡识别主要识别银行卡号，因此获取到的图像主要是银行卡号位置。</p><p>在获取到银行卡号之后，通过信息对比获取到银行卡的开户行。在银行卡信息页面可以展示出银行卡识别截图、银行卡开户行、银行卡号。</p><h2 id="三：项目展示"><a href="#三：项目展示" class="headerlink" title="三：项目展示"></a>三：项目展示</h2><h4 id="1-扫描银行卡页面"><a href="#1-扫描银行卡页面" class="headerlink" title="1.扫描银行卡页面"></a>1.扫描银行卡页面</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-a9f000cce5adba7c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="扫描银行卡页面"></p><h4 id="2-信息展示页面"><a href="#2-信息展示页面" class="headerlink" title="2.信息展示页面"></a>2.信息展示页面</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-474fd5e415a22318.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="信息展示页面"></p><h2 id="四：Demo接入流程"><a href="#四：Demo接入流程" class="headerlink" title="四：Demo接入流程"></a>四：Demo接入流程</h2><h4 id="1-导入ReactiveCocoa框架"><a href="#1-导入ReactiveCocoa框架" class="headerlink" title="1.导入ReactiveCocoa框架"></a>1.导入ReactiveCocoa框架</h4><p>使用ReactiveCocoa对银行卡识别出的信息回调。</p><p>添加ReactiveCocoa框架最简单的方法就是用CocoaPods导入。</p><p>如果你从没用过CocoaPods，可以参考<a href="">CocoaPods | iOS详细使用说明</a>这篇教程吧。请至少看完教程中初始化的步骤，这样你才能安装框架。</p><p>如果不想用CocoaPods，你仍然可以使用ReactiveCocoa，具体查看Github文档中引入ReactiveCocoa的步骤描述。</p><p>这里简单介绍CocoaPods导入：<br>键盘输入 i，进入编辑模式，输入下面代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">platform :ios, &apos;8.0&apos;</span><br><span class="line">use_frameworks!</span><br><span class="line"></span><br><span class="line">def pods</span><br><span class="line">pod &apos;ReactiveCocoa&apos;, &apos;2.3.1&apos;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">target &apos;项目名称&apos; do</span><br><span class="line">pods</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p><p>下载框架即可。</p><h4 id="2-添加配置"><a href="#2-添加配置" class="headerlink" title="2.添加配置"></a>2.添加配置</h4><p>在你的项目的Info.plist文件中，添加权限描述（Key   Value）<br>Privacy - Camera Usage Description 是否允许访问相机<br>Privacy - Photo Library Usage Description 是否允许访问相册<br>如下图：<br><img src="https://user-gold-cdn.xitu.io/2018/1/2/160b57cc1a6b2c9d?w=1136&amp;h=804&amp;f=png&amp;s=173122" alt="plist"></p><h4 id="3-项目设置"><a href="#3-项目设置" class="headerlink" title="3. 项目设置"></a>3. 项目设置</h4><ol><li><p>选择项目名字，选择Build Settings，搜索enable bitcode 设置为NO。</p></li><li><p>xcode8上边编译可能会遇到arm64错误， 选择项目名字，选择Build Settings，搜索Enable Testability 设置为NO。</p></li></ol><h4 id="4-首先把demo下载下来-demo链接在文章末尾"><a href="#4-首先把demo下载下来-demo链接在文章末尾" class="headerlink" title="4.首先把demo下载下来(demo链接在文章末尾)"></a>4.首先把demo下载下来(demo链接在文章末尾)</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-090011dc648dcd91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="demo截图"></p><h4 id="5-打开项目将下面的文件拷贝到自己的工程中："><a href="#5-打开项目将下面的文件拷贝到自己的工程中：" class="headerlink" title="5.打开项目将下面的文件拷贝到自己的工程中："></a>5.打开项目将下面的文件拷贝到自己的工程中：</h4><ul><li>bank_card</li><li>BankData</li></ul><h4 id="6-项目引用"><a href="#6-项目引用" class="headerlink" title="6. 项目引用"></a>6. 项目引用</h4><p>在项目中需要使用的页面，增加引用代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;FBYBankCardViewController.h&quot;</span><br></pre></td></tr></table></figure></p><p>在点击扫描身份证的点击事件中，跳转页面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FBYBankCardViewController *bcvc = [[FBYBankCardViewController alloc]init];</span><br><span class="line"></span><br><span class="line">[self.navigationController pushViewController:bcvc animated:YES];</span><br></pre></td></tr></table></figure></p><p>到此项目就接入完成！！！</p><blockquote><p>希望可以帮助大家，如有问题可加QQ群: 668562416 交流</p><p>如果哪里有什么不对或者不足的地方，还望读者多多提意见或建议</p><p>如需转载请联系我，经过授权方可转载，谢谢</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一：简介&quot;&gt;&lt;a href=&quot;#一：简介&quot; class=&quot;headerlink&quot; title=&quot;一：简介&quot;&gt;&lt;/a&gt;一：简介&lt;/h2&gt;&lt;p&gt;快捷支付涉及到方方面面，同时安全问题既是用户所关心的，也是制作者不容忽视的重要部分。&lt;br&gt;比如涉及到支付和金钱的app，商户端app等等，都需要进行实名认证，实名认证可以通过银行卡认证和身份证认证。&lt;br&gt;今天我就和大家介绍一下银行卡识别功能，这个方法是通过图像识别，可以快速、高效的识别银行卡信息。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS干货集" scheme="http://isfanbaoying.com/categories/iOS%E5%B9%B2%E8%B4%A7%E9%9B%86/"/>
    
    
      <category term="Objective-C" scheme="http://isfanbaoying.com/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>使用Git命令-上传项目到GitHub</title>
    <link href="http://isfanbaoying.com/postName/"/>
    <id>http://isfanbaoying.com/postName/</id>
    <published>2018-01-22T09:07:48.000Z</published>
    <updated>2018-01-23T08:15:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一：-账号连接github-创建ssh"><a href="#一：-账号连接github-创建ssh" class="headerlink" title="一： 账号连接github - 创建ssh"></a>一： 账号连接github - 创建ssh</h2><p>由于本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以要在本地生成一个私钥和一个密钥</p><h4 id="1-终端-显示隐藏文件"><a href="#1-终端-显示隐藏文件" class="headerlink" title="1. 终端 显示隐藏文件"></a>1. 终端 显示隐藏文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool true</span><br></pre></td></tr></table></figure><h4 id="2-查看-ssh文件"><a href="#2-查看-ssh文件" class="headerlink" title="2. 查看.ssh文件"></a>2. 查看.ssh文件</h4><p>点击桌面顶部菜单 前往&gt;个人 看看自己电脑上有没有个 .ssh 的隐藏文件，有的话个人建议删除，新建个。</p><a id="more"></a><h4 id="3-终端新建个-ssh文件"><a href="#3-终端新建个-ssh文件" class="headerlink" title="3. 终端新建个 .ssh文件"></a>3. 终端新建个 .ssh文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir .ssh</span><br></pre></td></tr></table></figure><h4 id="4-进入到刚才新建的-ssh文件目录下"><a href="#4-进入到刚才新建的-ssh文件目录下" class="headerlink" title="4. 进入到刚才新建的.ssh文件目录下"></a>4. 进入到刚才新建的.ssh文件目录下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd .ssh</span><br></pre></td></tr></table></figure><h4 id="5-随意输入个邮箱就行"><a href="#5-随意输入个邮箱就行" class="headerlink" title="5. 随意输入个邮箱就行"></a>5. 随意输入个邮箱就行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-Keygen -t rsa -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><h4 id="6-查看是否存在-id-rsa-私钥-id-rsa-pub-公钥"><a href="#6-查看是否存在-id-rsa-私钥-id-rsa-pub-公钥" class="headerlink" title="6. 查看是否存在 id_rsa(私钥)  id_rsa.pub(公钥)"></a>6. 查看是否存在 id_rsa(私钥)  id_rsa.pub(公钥)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -la</span><br></pre></td></tr></table></figure><h4 id="7-拷贝公钥"><a href="#7-拷贝公钥" class="headerlink" title="7. 拷贝公钥"></a>7. 拷贝公钥</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pbcopy &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><h4 id="8-粘贴公钥"><a href="#8-粘贴公钥" class="headerlink" title="8. 粘贴公钥"></a>8. 粘贴公钥</h4><p>登陆github，选择Account Settings–&gt;SSH Keys 添加ssh</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-fed0ebf40f7aec14.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加"></p><p>终端执行如下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>新添加到github上的秘钥左边的点一开始是灰色的，终端执行这个命令后，刷新网页会看到灰色点变成了绿色,说明已经添加成功。</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-27bebddf18562211.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加成功"></p><h2 id="二：-创建项目"><a href="#二：-创建项目" class="headerlink" title="二： 创建项目"></a>二： 创建项目</h2><h4 id="1-检测你的帐号跟github是否连上"><a href="#1-检测你的帐号跟github是否连上" class="headerlink" title="1. 检测你的帐号跟github是否连上"></a>1. 检测你的帐号跟github是否连上</h4><p>输入下面命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>如果出现下图提示，说明已经连上了</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-ee061dcca7bd7adf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="命令截图"></p><h4 id="2-开始创建项目"><a href="#2-开始创建项目" class="headerlink" title="2. 开始创建项目"></a>2. 开始创建项目</h4><p>在git创建个人项目</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-c0143e21c801b7a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建项目"></p><h4 id="3-创建项目设置"><a href="#3-创建项目设置" class="headerlink" title="3. 创建项目设置"></a>3. 创建项目设置</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-d6f40c7a7cd0bee4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="设置"></p><h4 id="4-创建成功"><a href="#4-创建成功" class="headerlink" title="4. 创建成功"></a>4. 创建成功</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-e0bff6978f5980b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="成功"></p><h2 id="三：-上传项目"><a href="#三：-上传项目" class="headerlink" title="三： 上传项目"></a>三： 上传项目</h2><p>整体操作命令如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">touch README.md //新建一个记录提交操作的文档</span><br><span class="line">git init //初始化本地仓库</span><br><span class="line">git add README.md //添加</span><br><span class="line">git add *  //加入所有项目</span><br><span class="line">git status //检查状态 如果都是绿的 证明成功</span><br><span class="line">git commit -m &quot;first commit&quot;//提交到要地仓库，并写一些注释</span><br><span class="line">git remote add origin git@github.com:youname/Test.git //连接远程仓库并建了一个名叫：origin的别名</span><br><span class="line">git push -u origin master //将本地仓库的东西提交到地址是origin的地址，master分支下</span><br></pre></td></tr></table></figure></p><p>下面做详细分析</p><h4 id="1-在上传项目目录下操作"><a href="#1-在上传项目目录下操作" class="headerlink" title="1. 在上传项目目录下操作"></a>1. 在上传项目目录下操作</h4><p>cd 到需要上传的项目下</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-5165ed03b8adc55d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="项目路径"></p><h4 id="2-新建一个记录提交操作的文档"><a href="#2-新建一个记录提交操作的文档" class="headerlink" title="2. 新建一个记录提交操作的文档"></a>2. 新建一个记录提交操作的文档</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-d049965315083558.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建文档"></p><h4 id="3-初始化本地仓库"><a href="#3-初始化本地仓库" class="headerlink" title="3. 初始化本地仓库"></a>3. 初始化本地仓库</h4><p>初始化本地仓库，并且提交所有项目</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-37f34ce277366907.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="初始化"></p><h4 id="4-上传项目到GitHub"><a href="#4-上传项目到GitHub" class="headerlink" title="4. 上传项目到GitHub"></a>4. 上传项目到GitHub</h4><p>上传之前做备注<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;手机时钟动画第一次更新&quot;</span><br></pre></td></tr></table></figure></p><p>上传到指定库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:fanbaoying/PhoneTime.git</span><br></pre></td></tr></table></figure></p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-408125778f27c9ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="上传"></p><h4 id="5-上传成功"><a href="#5-上传成功" class="headerlink" title="5. 上传成功"></a>5. 上传成功</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-940ee8629390ef98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="上传成功"></p><h2 id="四：错误问题解决"><a href="#四：错误问题解决" class="headerlink" title="四：错误问题解决"></a>四：错误问题解决</h2><h4 id="错误提示一"><a href="#错误提示一" class="headerlink" title="错误提示一"></a>错误提示一</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: remote origin already exists.</span><br></pre></td></tr></table></figure><p>解决办法如下：<br>先输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure></p><p>再输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:djqiang/gitdemo.git</span><br></pre></td></tr></table></figure></p><p>就不会报错了</p><h4 id="错误提示二"><a href="#错误提示二" class="headerlink" title="错误提示二"></a>错误提示二</h4><p>如果输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>出现错误提示：Permission denied (publickey).因为新生成的key不能加入ssh就会导致连接不上github。<br>解决办法如下：<br>1、先输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent</span><br></pre></td></tr></table></figure></p><p>再输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_key</span><br></pre></td></tr></table></figure></p><p>这样就可以了。</p><p>2、如果还是不行的话输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_key</span><br></pre></td></tr></table></figure></p><p>命令后出现报错Could not open a connection to your authentication agent.解决方法是key用Git Gui的ssh工具生成，这样生成的时候key就直接保存在ssh中了，不需要再ssh-add命令加入了，其它的user，token等配置都用命令行来做。</p><p>3、最好检查一下在你复制id_rsa.pub文件的内容时有没有产生多余的空格或空行，有些编辑器会帮你添加这些的。</p><h4 id="错误提示三"><a href="#错误提示三" class="headerlink" title="错误提示三"></a>错误提示三</h4><p>如果输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure></p><p> 报错的话error: Could not remove config section ‘remote.origin’. 我们需要修改gitconfig文件的内容</p><p>找到一个名为gitconfig的文件，打开它把里面的[remote “origin”]那一行删掉。</p><h4 id="错误提示四"><a href="#错误提示四" class="headerlink" title="错误提示四"></a>错误提示四</h4><p>如果输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p><p>提示出错信息：error:failed to push som refs to …….<br>解决办法如下：<br>先输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure></p><p>先把远程服务器github上面的文件拉下来<br>再输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p><p>如果出现报错 fatal: Couldn’t find remote ref master或者fatal: ‘origin’ does not appear to be a git repository以及fatal: Could not read from remote repository.<br>则需要重新输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origingit@github.com:djqiang/gitdemo.git</span><br></pre></td></tr></table></figure></p><p>问题就可以解决</p><h4 id="错误提示五"><a href="#错误提示五" class="headerlink" title="错误提示五"></a>错误提示五</h4><p>对GitHub已有项目进行更新的时候，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>如果遇到下面错误</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-454a3320f132fdcb.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="111.jpg"></p><p>出现错误的主要原因是github中的README.md文件不在本地代码目录中。</p><p>可以通过如下命令进行代码合并：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure></p><p>然后在运行下面语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></p><p>就成功了。</p><blockquote><p>希望可以帮助大家, 如有问题可加QQ技术交流群: 591625129</p><p>如果哪里有什么不对或者不足的地方，还望读者多多提意见或建议</p><p>如需转载请联系我，经过授权方可转载，谢谢</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一：-账号连接github-创建ssh&quot;&gt;&lt;a href=&quot;#一：-账号连接github-创建ssh&quot; class=&quot;headerlink&quot; title=&quot;一： 账号连接github - 创建ssh&quot;&gt;&lt;/a&gt;一： 账号连接github - 创建ssh&lt;/h2&gt;&lt;p&gt;由于本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以要在本地生成一个私钥和一个密钥&lt;/p&gt;
&lt;h4 id=&quot;1-终端-显示隐藏文件&quot;&gt;&lt;a href=&quot;#1-终端-显示隐藏文件&quot; class=&quot;headerlink&quot; title=&quot;1. 终端 显示隐藏文件&quot;&gt;&lt;/a&gt;1. 终端 显示隐藏文件&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;defaults write com.apple.finder AppleShowAllFiles -bool true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-查看-ssh文件&quot;&gt;&lt;a href=&quot;#2-查看-ssh文件&quot; class=&quot;headerlink&quot; title=&quot;2. 查看.ssh文件&quot;&gt;&lt;/a&gt;2. 查看.ssh文件&lt;/h4&gt;&lt;p&gt;点击桌面顶部菜单 前往&amp;gt;个人 看看自己电脑上有没有个 .ssh 的隐藏文件，有的话个人建议删除，新建个。&lt;/p&gt;
    
    </summary>
    
      <category term="终端" scheme="http://isfanbaoying.com/categories/%E7%BB%88%E7%AB%AF/"/>
    
    
      <category term="git" scheme="http://isfanbaoying.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://isfanbaoying.com/hello-world/"/>
    <id>http://isfanbaoying.com/hello-world/</id>
    <published>2018-01-22T08:00:21.000Z</published>
    <updated>2018-01-22T08:00:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
