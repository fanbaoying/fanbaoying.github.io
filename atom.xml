<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FBY展菲个人博客</title>
  
  <subtitle>『公众号：网罗开发』</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://fanbaoying.github.io/"/>
  <updated>2018-01-25T09:44:01.000Z</updated>
  <id>https://fanbaoying.github.io/</id>
  
  <author>
    <name>FBY展菲</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>快速高效 | iOS身份证识别</title>
    <link href="https://fanbaoying.github.io/%E5%BF%AB%E9%80%9F%E9%AB%98%E6%95%88-iOS%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%AF%86%E5%88%AB/"/>
    <id>https://fanbaoying.github.io/快速高效-iOS身份证识别/</id>
    <published>2018-01-25T09:40:58.000Z</published>
    <updated>2018-01-25T09:44:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一：简介"><a href="#一：简介" class="headerlink" title="一：简介"></a>一：简介</h2><p>快捷支付涉及到方方面面，同时安全问题既是用户所关心的，也是制作者不容忽视的重要部分。<br>比如涉及到支付和金钱的app，商户端app等等，都需要进行实名认证，实名认证可以通过银行卡认证和身份证认证。<br>通常办法是通过上传照片，并且手动输入基本信息进行认证，这种方法不仅操作复杂，而且容易出错。<br>网上很多资源，识别率低，速度慢，用户体验很差。今天我就和大家介绍一下我使用的方法，可以快速、高效的识别中国身份证信息。</p><a id="more"></a><h2 id="二：原理"><a href="#二：原理" class="headerlink" title="二：原理"></a>二：原理</h2><p>经实践发现，只要身份证号码处于摄像头预览图层中时，即不用完全对准身份证也可以读取到身份证号码，但此时截取到的身份证图像并不完整。</p><p>为获取到比较完整的身份证图像，经多次实践发现，当身份证人像大约位于拍摄框中的右上区域时，此时可获取到比较完整的身份证图像。</p><p>因此，在拍摄框中右上区域加了一个人像区域提示框，并将该区域设为扫描人脸的区域，只有该区域扫描到身份证上的人脸时（确保用户的确将身份证人像对准了拍摄框中的人像框），才执行读取身份证信息的操作。</p><h2 id="三：项目展示"><a href="#三：项目展示" class="headerlink" title="三：项目展示"></a>三：项目展示</h2><p>扫描身份证页面<br><img src="http://upload-images.jianshu.io/upload_images/2829694-a7b75f0e38644d03.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="扫描身份证页面"></p><p>信息展示页面</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-a58987dfb8a196b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="信息展示页面"></p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-d928d98355e25059.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5AB7A14B-0121-4AE8-A6C5-F5A6668287D7.png"></p><h2 id="四：Demo接入流程"><a href="#四：Demo接入流程" class="headerlink" title="四：Demo接入流程"></a>四：Demo接入流程</h2><h4 id="1-首先把demo下载下来"><a href="#1-首先把demo下载下来" class="headerlink" title="1.首先把demo下载下来"></a>1.首先把<a href="https://github.com/fanbaoying/FBYIDCardRecognition-iOS" target="_blank" rel="noopener">demo</a>下载下来</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-093ec5c36f491a5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="demo截图"></p><h4 id="2-打开项目将下面的文件拷贝到自己的工程中："><a href="#2-打开项目将下面的文件拷贝到自己的工程中：" class="headerlink" title="2.打开项目将下面的文件拷贝到自己的工程中："></a>2.打开项目将下面的文件拷贝到自己的工程中：</h4><ul><li>libexidcard</li><li>FBYTool</li><li>FBYCategory</li><li>FBYModel</li><li>FBYView</li><li>FBYBase</li></ul><h4 id="3-添加配置"><a href="#3-添加配置" class="headerlink" title="3.添加配置"></a>3.添加配置</h4><p>在你的项目的Info.plist文件中，添加权限描述（Key   Value）<br>Privacy - Camera Usage Description 是否允许访问相机<br>Privacy - Photo Library Usage Description 是否允许访问相册<br>如下图：<br><img src="http://upload-images.jianshu.io/upload_images/2829694-d80f70244fb93afe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="plist"></p><h4 id="4-项目设置"><a href="#4-项目设置" class="headerlink" title="4. 项目设置"></a>4. 项目设置</h4><p>根据项目截图设置即可</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-a60f239981f12bbb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="项目设置"></p><h4 id="5-项目引用"><a href="#5-项目引用" class="headerlink" title="5. 项目引用"></a>5. 项目引用</h4><p>在项目中需要使用的页面，增加引用代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;IDCardCaptureViewController.h&quot;</span><br></pre></td></tr></table></figure></p><p>在点击扫描身份证的点击事件中，跳转页面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IDCardCaptureViewController *idcvc = [[IDCardCaptureViewController alloc]init];</span><br><span class="line"></span><br><span class="line">[self.navigationController pushViewController:idcvc animated:YES];</span><br></pre></td></tr></table></figure></p><p>到此项目就接入完成！！！</p><blockquote><p>希望可以帮助大家, 如有问题可加QQ技术交流群: 668562416</p><p>如果哪里有什么不对或者不足的地方，还望读者多多提意见或建议</p><p>如需转载请联系我，经过授权方可转载，谢谢</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一：简介&quot;&gt;&lt;a href=&quot;#一：简介&quot; class=&quot;headerlink&quot; title=&quot;一：简介&quot;&gt;&lt;/a&gt;一：简介&lt;/h2&gt;&lt;p&gt;快捷支付涉及到方方面面，同时安全问题既是用户所关心的，也是制作者不容忽视的重要部分。&lt;br&gt;比如涉及到支付和金钱的app，商户端app等等，都需要进行实名认证，实名认证可以通过银行卡认证和身份证认证。&lt;br&gt;通常办法是通过上传照片，并且手动输入基本信息进行认证，这种方法不仅操作复杂，而且容易出错。&lt;br&gt;网上很多资源，识别率低，速度慢，用户体验很差。今天我就和大家介绍一下我使用的方法，可以快速、高效的识别中国身份证信息。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS文集" scheme="https://fanbaoying.github.io/categories/iOS%E6%96%87%E9%9B%86/"/>
    
    
      <category term="iOS" scheme="https://fanbaoying.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Java连接MySQL数据库详细分析</title>
    <link href="https://fanbaoying.github.io/Java%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90/"/>
    <id>https://fanbaoying.github.io/Java连接MySQL数据库详细分析/</id>
    <published>2018-01-25T09:35:35.000Z</published>
    <updated>2018-01-25T09:38:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一：工具"><a href="#一：工具" class="headerlink" title="一：工具"></a>一：工具</h2><p>eclipse<br>MySQL5.7<br>MySQL连接驱动：mysql-connector-java-5.1.44-bin.jar<a href="https://dev.mysql.com/downloads/connector/j/" target="_blank" rel="noopener">下载地址</a></p><a id="more"></a><h2 id="二：加载驱动"><a href="#二：加载驱动" class="headerlink" title="二：加载驱动"></a>二：加载驱动</h2><p>2.1 在工程目录中创建lib文件夹，将下载好的JDBC放到该文件夹下，如下图所示：</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-9409579868aa2f80.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="项目文件截图"><br>2.2  右键工程名，选最后一个Properties，在java build path中的Libraries分页中选择Add JARs…，选择刚才添加的JDBC，如下图：</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-a6f23953ad48761b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="配置截图"></p><p>2.3 数据包准备<br><a href="http://www.jianshu.com/p/07a9826898c0" target="_blank" rel="noopener">安装mysql</a><br>在数据库studb中创建如下数据表t_stu:</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-f88510125881f35e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="表结构"></p><p>2.4 添加数据，表内容如图：</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-6205331e45992d55.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="表内容"></p><p>2.5 连接数据库并读取数据</p><blockquote><p>数据库名称：studb<br>数据包名称：t_stu<br>端口号：3306<br>用户名：root<br>密码：12345</p></blockquote><p>2.6 具体代码如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">package com.agree.sqldemo;</span><br><span class="line"></span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.DriverManager;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line">import java.sql.Statement;</span><br><span class="line"></span><br><span class="line">public class main &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">//声明Connection对象</span><br><span class="line">Connection con;</span><br><span class="line">//驱动程序名</span><br><span class="line">String driver = &quot;com.mysql.jdbc.Driver&quot;;</span><br><span class="line">//URL指向要访问的数据库名studb</span><br><span class="line">String url = &quot;jdbc:mysql://localhost:3306/studb&quot;;</span><br><span class="line">//MySQL配置时的用户名</span><br><span class="line">String user = &quot;root&quot;;</span><br><span class="line">//MySQL配置时的密码</span><br><span class="line">String password = &quot;12345&quot;;</span><br><span class="line"></span><br><span class="line">//遍历查询结果集</span><br><span class="line">try &#123;</span><br><span class="line"></span><br><span class="line">//加载驱动程序</span><br><span class="line">Class.forName(driver);</span><br><span class="line">//1.getConnection()方法，连接MySQL数据库！！</span><br><span class="line">con = DriverManager.getConnection(url,user,password);</span><br><span class="line"></span><br><span class="line">if(!con.isClosed())</span><br><span class="line">System.out.println(&quot;Succeeded connecting to the Database!&quot;);</span><br><span class="line">//2.创建statement类对象，用来执行SQL语句！！</span><br><span class="line">Statement statement = con.createStatement();</span><br><span class="line">//要执行的SQL语句</span><br><span class="line">String sql = &quot;select * from t_stu&quot;;</span><br><span class="line"></span><br><span class="line">//3.ResultSet类，用来存放获取的结果集！！</span><br><span class="line">ResultSet rs = statement.executeQuery(sql);</span><br><span class="line">System.out.println(&quot;-----------------&quot;);</span><br><span class="line">System.out.println(&quot;执行结果如下所示:&quot;);</span><br><span class="line">System.out.println(&quot;-----------------&quot;);</span><br><span class="line">System.out.println(&quot;姓名&quot; + &quot;\t&quot; + &quot;地址&quot;);</span><br><span class="line">System.out.println(&quot;-----------------&quot;);  </span><br><span class="line"></span><br><span class="line">String address = null;</span><br><span class="line"></span><br><span class="line">String name = null;</span><br><span class="line"></span><br><span class="line">while(rs.next())&#123;</span><br><span class="line">//获取sname这列数据</span><br><span class="line">name = rs.getString(&quot;sname&quot;);</span><br><span class="line">//获取address这列数据</span><br><span class="line">address = rs.getString(&quot;address&quot;);</span><br><span class="line">//输出结果</span><br><span class="line">System.out.println(name + &quot;\t&quot; + address);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">rs.close();</span><br><span class="line">con.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;catch(ClassNotFoundException e) &#123;</span><br><span class="line">//数据库驱动类异常处理</span><br><span class="line">System.out.println(&quot;Sorry,can`t find the Driver!&quot;);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;catch(SQLException e) &#123;</span><br><span class="line">//数据库连接失败异常处理</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;catch (Exception e) &#123;</span><br><span class="line"> e.printStackTrace();</span><br><span class="line"></span><br><span class="line">&#125;finally&#123;</span><br><span class="line">System.out.println(&quot;数据库数据成功获取！！&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2.7 运行结果如下图所示<br><img src="http://upload-images.jianshu.io/upload_images/2829694-3cb9446725830fe9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="运行结果"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一：工具&quot;&gt;&lt;a href=&quot;#一：工具&quot; class=&quot;headerlink&quot; title=&quot;一：工具&quot;&gt;&lt;/a&gt;一：工具&lt;/h2&gt;&lt;p&gt;eclipse&lt;br&gt;MySQL5.7&lt;br&gt;MySQL连接驱动：mysql-connector-java-5.1.44-bin.jar&lt;a href=&quot;https://dev.mysql.com/downloads/connector/j/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java文集" scheme="https://fanbaoying.github.io/categories/Java%E6%96%87%E9%9B%86/"/>
    
    
      <category term="Java" scheme="https://fanbaoying.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>快速高效 | Android身份证识别</title>
    <link href="https://fanbaoying.github.io/%E5%BF%AB%E9%80%9F%E9%AB%98%E6%95%88-Android%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%AF%86%E5%88%AB/"/>
    <id>https://fanbaoying.github.io/快速高效-Android身份证识别/</id>
    <published>2018-01-25T09:20:44.000Z</published>
    <updated>2018-01-25T09:28:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一：简介"><a href="#一：简介" class="headerlink" title="一：简介"></a>一：简介</h2><p>快捷支付涉及到方方面面，同时安全问题既是用户所关心的，也是制作者不容忽视的重要部分。<br>比如涉及到支付和金钱的app，商户端app等等，都需要进行实名认证，实名认证可以通过银行卡认证和身份证认证。<br>通常办法是通过上传照片，并且手动输入基本信息进行认证，这种方法不仅操作复杂，而且容易出错。<br>网上很多资源，识别率低，速度慢，用户体验很差。今天我就和大家介绍一下我使用的方法，可以快速、高效的识别中国身份证信息。</p><a id="more"></a><h2 id="二：原理"><a href="#二：原理" class="headerlink" title="二：原理"></a>二：原理</h2><p>在拍摄框中右上区域加了一个人像区域提示框，并将该区域设为扫描人脸的区域，只有该区域扫描到身份证上的人脸时（确保用户的确将身份证人像对准了拍摄框中的人像框），才执行读取身份证信息的操作。</p><h2 id="三：项目展示"><a href="#三：项目展示" class="headerlink" title="三：项目展示"></a>三：项目展示</h2><p>扫描身份证面截图</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-20b78f45be90b3de.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="头像面扫描"></p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-8cd81ffdb6f4daac.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="国徽面扫描"></p><p>信息展示页面</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-5dc5685f6c54a9df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="头像页信息"></p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-856239c3727e49d6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="国徽页信息"></p><h2 id="四：-使用流程介绍"><a href="#四：-使用流程介绍" class="headerlink" title="四： 使用流程介绍"></a>四： 使用流程介绍</h2><h4 id="4-1-身份验证"><a href="#4-1-身份验证" class="headerlink" title="4.1 身份验证"></a>4.1 身份验证</h4><p>由于使用的是百度云的图像文字识别sdk，首先需要去百度云<a href="https://console.bce.baidu.com/ai/?_=1515636851708&amp;fromai=1#/ai/ocr/app/list" target="_blank" rel="noopener">管理控制台</a>获得API Key / Secret Key。</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-d962a45ac612e492.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="管理控制台"></p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-97842b3398dd0700.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="管理控制台"></p><h4 id="4-2-下载demo"><a href="#4-2-下载demo" class="headerlink" title="4.2 下载demo"></a>4.2 下载demo</h4><p><a href="https://github.com/fanbaoying/FBYIDCardRecognition-Android" target="_blank" rel="noopener">GitHub 源码链接</a></p><ol><li>将下载的demo中libs目录下的ocr-sdk.jar文件拷贝到工程libs目录中，并加入工程依赖</li><li>将libs目录下armeabi，arm64-v8a，armeabi-v7a，x86文件夹按需添加到android studio工程src/main/jniLibs目录中， eclipse用户默认为libs目录。</li><li>在Android studio中以模块方式导入下载包中的identify文件夹,模块方式导入流程如下：<br>首先要在顶层工程目录下的settings.gradle文件中include模块名<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include &apos;:app&apos;,&apos;:identify&apos;</span><br></pre></td></tr></table></figure></li></ol><p>然后直接复制粘贴identify文件导入到项目的文件夹中！！！然后Build&gt;Rebuild Project，重新构建项目。</p><h4 id="4-3-权限配置"><a href="#4-3-权限配置" class="headerlink" title="4.3 权限配置"></a>4.3 权限配置</h4><ol><li><p>在工程AndroidManifest.xml文件中添加如下权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.CAMERA&quot;/&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot;/&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;/&gt;</span><br></pre></td></tr></table></figure></li><li><p>在Proguard配置文件中增加, 防止release发布时打包报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-keep class com.baidu.ocr.sdk.**&#123;*;&#125;</span><br><span class="line">-dontwarn com.baidu.ocr.**</span><br></pre></td></tr></table></figure></li></ol><h4 id="4-4-核心函数介绍"><a href="#4-4-核心函数介绍" class="headerlink" title="4.4 核心函数介绍"></a>4.4 核心函数介绍</h4><ol><li><p>初始化函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">OCR.getInstance().initAccessTokenWithAkSk(new OnResultListener&lt;AccessToken&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onResult(AccessToken result) &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public void onError(OCRError error) &#123;</span><br><span class="line">                error.printStackTrace();</span><br><span class="line">                Log.d(&quot;onError&quot;, &quot;msg: &quot; + error.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, getApplicationContext(), &quot;你注册的appkey&quot;, &quot;你注册的sk&quot;);</span><br></pre></td></tr></table></figure></li><li><p>身份证拍照</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = new Intent(MainActivity.this, CameraActivity.class);</span><br><span class="line">intent.putExtra(CameraActivity.KEY_OUTPUT_FILE_PATH,</span><br><span class="line">    FileUtil.getSaveFile(getApplication()).getAbsolutePath());</span><br><span class="line">intent.putExtra(CameraActivity.KEY_CONTENT_TYPE, CameraActivity.CONTENT_TYPE_ID_CARD_FRONT);</span><br><span class="line">startActivityForResult(intent, REQUEST_CODE_CAMERA);</span><br></pre></td></tr></table></figure><ol><li><p>图像回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">protected void onActivityResult(int requestCode, int resultCode, Intent data) &#123;</span><br><span class="line">    super.onActivityResult(requestCode, resultCode, data);</span><br><span class="line"></span><br><span class="line">    if (requestCode == REQUEST_CODE_CAMERA &amp;&amp; resultCode == Activity.RESULT_OK) &#123;</span><br><span class="line">        if (data != null) &#123;</span><br><span class="line">            String contentType = data.getStringExtra(CameraActivity.KEY_CONTENT_TYPE);</span><br><span class="line">            String filePath = FileUtil.getSaveFile(getApplicationContext()).getAbsolutePath();</span><br><span class="line">            if (!TextUtils.isEmpty(contentType)) &#123;</span><br><span class="line">                if (CameraActivity.CONTENT_TYPE_ID_CARD_FRONT.equals(contentType)) &#123;</span><br><span class="line">                    recIDCard(IDCardParams.ID_CARD_SIDE_FRONT, filePath);</span><br><span class="line">                &#125; else if (CameraActivity.CONTENT_TYPE_ID_CARD_BACK.equals(contentType)) &#123;</span><br><span class="line">                    recIDCard(IDCardParams.ID_CARD_SIDE_BACK, filePath);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>数据解析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">private void recIDCard(String idCardSide, String filePath) &#123;</span><br><span class="line">    IDCardParams param = new IDCardParams();</span><br><span class="line">    param.setImageFile(new File(filePath));</span><br><span class="line">    param.setIdCardSide(idCardSide);</span><br><span class="line">    param.setDetectDirection(true);</span><br><span class="line">    OCR.getInstance().recognizeIDCard(param, new OnResultListener&lt;IDCardResult&gt;() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        public void onResult(IDCardResult result) &#123;</span><br><span class="line">            if (result != null) &#123;</span><br><span class="line">                Log.d(&quot;onResult&quot;, &quot;result: &quot; + result.toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @Override</span><br><span class="line">        public void onError(OCRError error) &#123;</span><br><span class="line">            Log.d(&quot;onError&quot;, &quot;error: &quot; + error.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>到此身份证识别接入就结束了！！！</p><p>相同方式均可实现银行卡识别、驾驶证识别、行驶证识别、车牌识别、营业执照识别等等，如有需要demo可联系我。</p><blockquote><p>希望可以帮助大家, 如有问题可加QQ技术交流群: 591625129</p><p>如果哪里有什么不对或者不足的地方，还望读者多多提意见或建议</p><p>如需转载请联系我，经过授权方可转载，谢谢</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一：简介&quot;&gt;&lt;a href=&quot;#一：简介&quot; class=&quot;headerlink&quot; title=&quot;一：简介&quot;&gt;&lt;/a&gt;一：简介&lt;/h2&gt;&lt;p&gt;快捷支付涉及到方方面面，同时安全问题既是用户所关心的，也是制作者不容忽视的重要部分。&lt;br&gt;比如涉及到支付和金钱的app，商户端app等等，都需要进行实名认证，实名认证可以通过银行卡认证和身份证认证。&lt;br&gt;通常办法是通过上传照片，并且手动输入基本信息进行认证，这种方法不仅操作复杂，而且容易出错。&lt;br&gt;网上很多资源，识别率低，速度慢，用户体验很差。今天我就和大家介绍一下我使用的方法，可以快速、高效的识别中国身份证信息。&lt;/p&gt;
    
    </summary>
    
      <category term="Android干货集" scheme="https://fanbaoying.github.io/categories/Android%E5%B9%B2%E8%B4%A7%E9%9B%86/"/>
    
    
      <category term="Android" scheme="https://fanbaoying.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>快速高效 | iOS银行卡识别</title>
    <link href="https://fanbaoying.github.io/%E5%BF%AB%E9%80%9F%E9%AB%98%E6%95%88-iOS%E9%93%B6%E8%A1%8C%E5%8D%A1%E8%AF%86%E5%88%AB/"/>
    <id>https://fanbaoying.github.io/快速高效-iOS银行卡识别/</id>
    <published>2018-01-23T07:26:01.000Z</published>
    <updated>2018-01-25T08:08:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一：简介"><a href="#一：简介" class="headerlink" title="一：简介"></a>一：简介</h2><p>快捷支付涉及到方方面面，同时安全问题既是用户所关心的，也是制作者不容忽视的重要部分。<br>比如涉及到支付和金钱的app，商户端app等等，都需要进行实名认证，实名认证可以通过银行卡认证和身份证认证。<br>今天我就和大家介绍一下银行卡识别功能，这个方法是通过图像识别，可以快速、高效的识别银行卡信息。</p><a id="more"></a><h2 id="二：原理"><a href="#二：原理" class="headerlink" title="二：原理"></a>二：原理</h2><p>经实践发现，只要银行卡处于摄像头预览图层中并且银行卡号与识别线重合，即不用完全对准银行卡也可以读取到银行卡号。</p><p>与身份证识别不同的是，银行卡识别主要识别银行卡号，因此获取到的图像主要是银行卡号位置。</p><p>在获取到银行卡号之后，通过信息对比获取到银行卡的开户行。在银行卡信息页面可以展示出银行卡识别截图、银行卡开户行、银行卡号。</p><h2 id="三：项目展示"><a href="#三：项目展示" class="headerlink" title="三：项目展示"></a>三：项目展示</h2><h4 id="1-扫描银行卡页面"><a href="#1-扫描银行卡页面" class="headerlink" title="1.扫描银行卡页面"></a>1.扫描银行卡页面</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-a9f000cce5adba7c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="扫描银行卡页面"></p><h4 id="2-信息展示页面"><a href="#2-信息展示页面" class="headerlink" title="2.信息展示页面"></a>2.信息展示页面</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-474fd5e415a22318.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="信息展示页面"></p><h2 id="四：Demo接入流程"><a href="#四：Demo接入流程" class="headerlink" title="四：Demo接入流程"></a>四：Demo接入流程</h2><h4 id="1-导入ReactiveCocoa框架"><a href="#1-导入ReactiveCocoa框架" class="headerlink" title="1.导入ReactiveCocoa框架"></a>1.导入ReactiveCocoa框架</h4><p>使用ReactiveCocoa对银行卡识别出的信息回调。</p><p>添加ReactiveCocoa框架最简单的方法就是用CocoaPods导入。</p><p>如果你从没用过CocoaPods，可以参考<a href="">CocoaPods | iOS详细使用说明</a>这篇教程吧。请至少看完教程中初始化的步骤，这样你才能安装框架。</p><p>如果不想用CocoaPods，你仍然可以使用ReactiveCocoa，具体查看Github文档中引入ReactiveCocoa的步骤描述。</p><p>这里简单介绍CocoaPods导入：<br>键盘输入 i，进入编辑模式，输入下面代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">platform :ios, &apos;8.0&apos;</span><br><span class="line">use_frameworks!</span><br><span class="line"></span><br><span class="line">def pods</span><br><span class="line">pod &apos;ReactiveCocoa&apos;, &apos;2.3.1&apos;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">target &apos;项目名称&apos; do</span><br><span class="line">pods</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p><p>下载框架即可。</p><h4 id="2-添加配置"><a href="#2-添加配置" class="headerlink" title="2.添加配置"></a>2.添加配置</h4><p>在你的项目的Info.plist文件中，添加权限描述（Key   Value）<br>Privacy - Camera Usage Description 是否允许访问相机<br>Privacy - Photo Library Usage Description 是否允许访问相册<br>如下图：<br><img src="https://user-gold-cdn.xitu.io/2018/1/2/160b57cc1a6b2c9d?w=1136&amp;h=804&amp;f=png&amp;s=173122" alt="plist"></p><h4 id="3-项目设置"><a href="#3-项目设置" class="headerlink" title="3. 项目设置"></a>3. 项目设置</h4><ol><li><p>选择项目名字，选择Build Settings，搜索enable bitcode 设置为NO。</p></li><li><p>xcode8上边编译可能会遇到arm64错误， 选择项目名字，选择Build Settings，搜索Enable Testability 设置为NO。</p></li></ol><h4 id="4-首先把demo下载下来-demo链接在文章末尾"><a href="#4-首先把demo下载下来-demo链接在文章末尾" class="headerlink" title="4.首先把demo下载下来(demo链接在文章末尾)"></a>4.首先把demo下载下来(demo链接在文章末尾)</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-090011dc648dcd91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="demo截图"></p><h4 id="5-打开项目将下面的文件拷贝到自己的工程中："><a href="#5-打开项目将下面的文件拷贝到自己的工程中：" class="headerlink" title="5.打开项目将下面的文件拷贝到自己的工程中："></a>5.打开项目将下面的文件拷贝到自己的工程中：</h4><ul><li>bank_card</li><li>BankData</li></ul><h4 id="6-项目引用"><a href="#6-项目引用" class="headerlink" title="6. 项目引用"></a>6. 项目引用</h4><p>在项目中需要使用的页面，增加引用代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;FBYBankCardViewController.h&quot;</span><br></pre></td></tr></table></figure></p><p>在点击扫描身份证的点击事件中，跳转页面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FBYBankCardViewController *bcvc = [[FBYBankCardViewController alloc]init];</span><br><span class="line"></span><br><span class="line">[self.navigationController pushViewController:bcvc animated:YES];</span><br></pre></td></tr></table></figure></p><p>到此项目就接入完成！！！</p><blockquote><p>希望可以帮助大家，如有问题可加QQ群: 668562416 交流</p><p>如果哪里有什么不对或者不足的地方，还望读者多多提意见或建议</p><p>如需转载请联系我，经过授权方可转载，谢谢</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一：简介&quot;&gt;&lt;a href=&quot;#一：简介&quot; class=&quot;headerlink&quot; title=&quot;一：简介&quot;&gt;&lt;/a&gt;一：简介&lt;/h2&gt;&lt;p&gt;快捷支付涉及到方方面面，同时安全问题既是用户所关心的，也是制作者不容忽视的重要部分。&lt;br&gt;比如涉及到支付和金钱的app，商户端app等等，都需要进行实名认证，实名认证可以通过银行卡认证和身份证认证。&lt;br&gt;今天我就和大家介绍一下银行卡识别功能，这个方法是通过图像识别，可以快速、高效的识别银行卡信息。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS干货集" scheme="https://fanbaoying.github.io/categories/iOS%E5%B9%B2%E8%B4%A7%E9%9B%86/"/>
    
    
      <category term="Objective-C" scheme="https://fanbaoying.github.io/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>使用Git命令-上传项目到GitHub</title>
    <link href="https://fanbaoying.github.io/%E4%BD%BF%E7%94%A8Git%E5%91%BD%E4%BB%A4-%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE%E5%88%B0GitHub/"/>
    <id>https://fanbaoying.github.io/使用Git命令-上传项目到GitHub/</id>
    <published>2018-01-22T09:07:48.000Z</published>
    <updated>2018-01-25T09:39:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一：-账号连接github-创建ssh"><a href="#一：-账号连接github-创建ssh" class="headerlink" title="一： 账号连接github - 创建ssh"></a>一： 账号连接github - 创建ssh</h2><p>由于本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以要在本地生成一个私钥和一个密钥</p><h4 id="1-终端-显示隐藏文件"><a href="#1-终端-显示隐藏文件" class="headerlink" title="1. 终端 显示隐藏文件"></a>1. 终端 显示隐藏文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool true</span><br></pre></td></tr></table></figure><h4 id="2-查看-ssh文件"><a href="#2-查看-ssh文件" class="headerlink" title="2. 查看.ssh文件"></a>2. 查看.ssh文件</h4><p>点击桌面顶部菜单 前往&gt;个人 看看自己电脑上有没有个 .ssh 的隐藏文件，有的话个人建议删除，新建个。</p><a id="more"></a><h4 id="3-终端新建个-ssh文件"><a href="#3-终端新建个-ssh文件" class="headerlink" title="3. 终端新建个 .ssh文件"></a>3. 终端新建个 .ssh文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir .ssh</span><br></pre></td></tr></table></figure><h4 id="4-进入到刚才新建的-ssh文件目录下"><a href="#4-进入到刚才新建的-ssh文件目录下" class="headerlink" title="4. 进入到刚才新建的.ssh文件目录下"></a>4. 进入到刚才新建的.ssh文件目录下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd .ssh</span><br></pre></td></tr></table></figure><h4 id="5-随意输入个邮箱就行"><a href="#5-随意输入个邮箱就行" class="headerlink" title="5. 随意输入个邮箱就行"></a>5. 随意输入个邮箱就行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-Keygen -t rsa -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><h4 id="6-查看是否存在-id-rsa-私钥-id-rsa-pub-公钥"><a href="#6-查看是否存在-id-rsa-私钥-id-rsa-pub-公钥" class="headerlink" title="6. 查看是否存在 id_rsa(私钥)  id_rsa.pub(公钥)"></a>6. 查看是否存在 id_rsa(私钥)  id_rsa.pub(公钥)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -la</span><br></pre></td></tr></table></figure><h4 id="7-拷贝公钥"><a href="#7-拷贝公钥" class="headerlink" title="7. 拷贝公钥"></a>7. 拷贝公钥</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pbcopy &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><h4 id="8-粘贴公钥"><a href="#8-粘贴公钥" class="headerlink" title="8. 粘贴公钥"></a>8. 粘贴公钥</h4><p>登陆github，选择Account Settings–&gt;SSH Keys 添加ssh</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-fed0ebf40f7aec14.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加"></p><p>终端执行如下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>新添加到github上的秘钥左边的点一开始是灰色的，终端执行这个命令后，刷新网页会看到灰色点变成了绿色,说明已经添加成功。</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-27bebddf18562211.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加成功"></p><h2 id="二：-创建项目"><a href="#二：-创建项目" class="headerlink" title="二： 创建项目"></a>二： 创建项目</h2><h4 id="1-检测你的帐号跟github是否连上"><a href="#1-检测你的帐号跟github是否连上" class="headerlink" title="1. 检测你的帐号跟github是否连上"></a>1. 检测你的帐号跟github是否连上</h4><p>输入下面命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>如果出现下图提示，说明已经连上了</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-ee061dcca7bd7adf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="命令截图"></p><h4 id="2-开始创建项目"><a href="#2-开始创建项目" class="headerlink" title="2. 开始创建项目"></a>2. 开始创建项目</h4><p>在git创建个人项目</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-c0143e21c801b7a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建项目"></p><h4 id="3-创建项目设置"><a href="#3-创建项目设置" class="headerlink" title="3. 创建项目设置"></a>3. 创建项目设置</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-d6f40c7a7cd0bee4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="设置"></p><h4 id="4-创建成功"><a href="#4-创建成功" class="headerlink" title="4. 创建成功"></a>4. 创建成功</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-e0bff6978f5980b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="成功"></p><h2 id="三：-上传项目"><a href="#三：-上传项目" class="headerlink" title="三： 上传项目"></a>三： 上传项目</h2><p>整体操作命令如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">touch README.md //新建一个记录提交操作的文档</span><br><span class="line">git init //初始化本地仓库</span><br><span class="line">git add README.md //添加</span><br><span class="line">git add *  //加入所有项目</span><br><span class="line">git status //检查状态 如果都是绿的 证明成功</span><br><span class="line">git commit -m &quot;first commit&quot;//提交到要地仓库，并写一些注释</span><br><span class="line">git remote add origin git@github.com:youname/Test.git //连接远程仓库并建了一个名叫：origin的别名</span><br><span class="line">git push -u origin master //将本地仓库的东西提交到地址是origin的地址，master分支下</span><br></pre></td></tr></table></figure></p><p>下面做详细分析</p><h4 id="1-在上传项目目录下操作"><a href="#1-在上传项目目录下操作" class="headerlink" title="1. 在上传项目目录下操作"></a>1. 在上传项目目录下操作</h4><p>cd 到需要上传的项目下</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-5165ed03b8adc55d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="项目路径"></p><h4 id="2-新建一个记录提交操作的文档"><a href="#2-新建一个记录提交操作的文档" class="headerlink" title="2. 新建一个记录提交操作的文档"></a>2. 新建一个记录提交操作的文档</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-d049965315083558.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建文档"></p><h4 id="3-初始化本地仓库"><a href="#3-初始化本地仓库" class="headerlink" title="3. 初始化本地仓库"></a>3. 初始化本地仓库</h4><p>初始化本地仓库，并且提交所有项目</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-37f34ce277366907.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="初始化"></p><h4 id="4-上传项目到GitHub"><a href="#4-上传项目到GitHub" class="headerlink" title="4. 上传项目到GitHub"></a>4. 上传项目到GitHub</h4><p>上传之前做备注<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;手机时钟动画第一次更新&quot;</span><br></pre></td></tr></table></figure></p><p>上传到指定库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:fanbaoying/PhoneTime.git</span><br></pre></td></tr></table></figure></p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-408125778f27c9ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="上传"></p><h4 id="5-上传成功"><a href="#5-上传成功" class="headerlink" title="5. 上传成功"></a>5. 上传成功</h4><p><img src="http://upload-images.jianshu.io/upload_images/2829694-940ee8629390ef98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="上传成功"></p><h2 id="四：错误问题解决"><a href="#四：错误问题解决" class="headerlink" title="四：错误问题解决"></a>四：错误问题解决</h2><h4 id="错误提示一"><a href="#错误提示一" class="headerlink" title="错误提示一"></a>错误提示一</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: remote origin already exists.</span><br></pre></td></tr></table></figure><p>解决办法如下：<br>先输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure></p><p>再输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:djqiang/gitdemo.git</span><br></pre></td></tr></table></figure></p><p>就不会报错了</p><h4 id="错误提示二"><a href="#错误提示二" class="headerlink" title="错误提示二"></a>错误提示二</h4><p>如果输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>出现错误提示：Permission denied (publickey).因为新生成的key不能加入ssh就会导致连接不上github。<br>解决办法如下：<br>1、先输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent</span><br></pre></td></tr></table></figure></p><p>再输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_key</span><br></pre></td></tr></table></figure></p><p>这样就可以了。</p><p>2、如果还是不行的话输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_key</span><br></pre></td></tr></table></figure></p><p>命令后出现报错Could not open a connection to your authentication agent.解决方法是key用Git Gui的ssh工具生成，这样生成的时候key就直接保存在ssh中了，不需要再ssh-add命令加入了，其它的user，token等配置都用命令行来做。</p><p>3、最好检查一下在你复制id_rsa.pub文件的内容时有没有产生多余的空格或空行，有些编辑器会帮你添加这些的。</p><h4 id="错误提示三"><a href="#错误提示三" class="headerlink" title="错误提示三"></a>错误提示三</h4><p>如果输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure></p><p> 报错的话error: Could not remove config section ‘remote.origin’. 我们需要修改gitconfig文件的内容</p><p>找到一个名为gitconfig的文件，打开它把里面的[remote “origin”]那一行删掉。</p><h4 id="错误提示四"><a href="#错误提示四" class="headerlink" title="错误提示四"></a>错误提示四</h4><p>如果输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p><p>提示出错信息：error:failed to push som refs to …….<br>解决办法如下：<br>先输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure></p><p>先把远程服务器github上面的文件拉下来<br>再输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p><p>如果出现报错 fatal: Couldn’t find remote ref master或者fatal: ‘origin’ does not appear to be a git repository以及fatal: Could not read from remote repository.<br>则需要重新输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origingit@github.com:djqiang/gitdemo.git</span><br></pre></td></tr></table></figure></p><p>问题就可以解决</p><h4 id="错误提示五"><a href="#错误提示五" class="headerlink" title="错误提示五"></a>错误提示五</h4><p>对GitHub已有项目进行更新的时候，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>如果遇到下面错误</p><p><img src="http://upload-images.jianshu.io/upload_images/2829694-454a3320f132fdcb.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="111.jpg"></p><p>出现错误的主要原因是github中的README.md文件不在本地代码目录中。</p><p>可以通过如下命令进行代码合并：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure></p><p>然后在运行下面语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></p><p>就成功了。</p><blockquote><p>希望可以帮助大家, 如有问题可加QQ技术交流群: 591625129</p><p>如果哪里有什么不对或者不足的地方，还望读者多多提意见或建议</p><p>如需转载请联系我，经过授权方可转载，谢谢</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一：-账号连接github-创建ssh&quot;&gt;&lt;a href=&quot;#一：-账号连接github-创建ssh&quot; class=&quot;headerlink&quot; title=&quot;一： 账号连接github - 创建ssh&quot;&gt;&lt;/a&gt;一： 账号连接github - 创建ssh&lt;/h2&gt;&lt;p&gt;由于本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以要在本地生成一个私钥和一个密钥&lt;/p&gt;
&lt;h4 id=&quot;1-终端-显示隐藏文件&quot;&gt;&lt;a href=&quot;#1-终端-显示隐藏文件&quot; class=&quot;headerlink&quot; title=&quot;1. 终端 显示隐藏文件&quot;&gt;&lt;/a&gt;1. 终端 显示隐藏文件&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;defaults write com.apple.finder AppleShowAllFiles -bool true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-查看-ssh文件&quot;&gt;&lt;a href=&quot;#2-查看-ssh文件&quot; class=&quot;headerlink&quot; title=&quot;2. 查看.ssh文件&quot;&gt;&lt;/a&gt;2. 查看.ssh文件&lt;/h4&gt;&lt;p&gt;点击桌面顶部菜单 前往&amp;gt;个人 看看自己电脑上有没有个 .ssh 的隐藏文件，有的话个人建议删除，新建个。&lt;/p&gt;
    
    </summary>
    
      <category term="终端" scheme="https://fanbaoying.github.io/categories/%E7%BB%88%E7%AB%AF/"/>
    
    
      <category term="git" scheme="https://fanbaoying.github.io/tags/git/"/>
    
  </entry>
  
</feed>
